create table users(id serial not null, name varchar(50) not null, primary key(id));

CREATE TABLE professors (id SERIAL not null, name VARCHAR(50) not null, PRIMARY KEY (id), CONSTRAINT fk_id FOREIGN KEY (id) REFERENCES users(id));

CREATE TABLE students (id SERIAL not null, name VARCHAR(50) not null, PRIMARY KEY (id), CONSTRAINT fk_id FOREIGN KEY (id) REFERENCES users(id));

CREATE TABLE ta (id SERIAL not null, name VARCHAR(50) not null, PRIMARY KEY (id), CONSTRAINT fk_id FOREIGN KEY (id) REFERENCES users(id)); 

CREATE TABLE administrators (id SERIAL not null, name VARCHAR(50) not null, PRIMARY KEY (id), CONSTRAINT fk_id FOREIGN KEY (id) REFERENCES users(id)); 

create table posts(date date not null, time timestamp not null, title varchar(100) not null, contents varchar(10485760) not null, authorID serial not null, annonymous boolean not null, limitedVisibility boolean not null, classID serial not null, postID serial primary key not null, constraint fk_authorID foreign key (authorID) references users(id), constraint fk_classID foreign key (classID) references classes(courseID));

create table enrolled(studentID serial not null, courseID serial not null, primary key (studentID, courseID), constraint fk_studentID foreign key (studentID) references students(id), constraint fk_courseID foreign key (courseID) references classes(courseID));

create table instructing(professorID serial not null, courseID serial not null, primary key (professorID, courseID), constraint fk_professorID foreign key (professorID) references professors(id), constraint fk_courseID foreign key (courseID) references classes(courseID));

create table classes(courseID serial primary key not null, courseName varchar(50) not null, courseSection varchar(50) not null);

create table announcements(announcementID serial primary key not null, date date not null, time timestamp not null, title varchar(100) not null, contents varchar(10485760) not null, classID serial not null, authorID serial not null, constraint fk_classID foreign key (classID) references classes(courseID), constraint fk_authorID foreign key (authorID) references users(id));

CREATE TABLE replies (date date NOT NULL, time timestamp NOT NULL, authorID serial NOT NULL, postID serial NOT NULL, anonymous boolean NOT NULL, replyid serial PRIMARY KEY NOT NULL, constraint fk_postID foreign key (postID) references Posts(postID), constraint fk_authorID foreign key (authorID) references users(id));